name: cui_build
on:
  push:
    branches:
      - 'main'
      - 'develop'
    paths:
      - 'src/*'
      - '.github/workflows/cui_build.yml'

jobs:
  build:
    name: Build Rust (on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    env: 
      RUST_BACKTRACE: full
      TZ: 'Asia/Tokyo'
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}-${{ matrix.target }}
      -
        name: Install musl tools
        if : matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          rustup target add x86_64-unknown-linux-musl
          sudo apt install -qq -y musl-tools --no-install-recommends
      -
        name: Exec cargo command
        run: cargo build --release --target=${{ matrix.target }}
      -
        name: Check release Directory for Linux
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          ls target/${{ matrix.target }}/release/
      -
        name: Check release Directory for Windows
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          dir target/${{ matrix.target }}/release/
      -
        name: Upload artifact for Linux
        if: matrix.target == 'x86_64-unknown-linux-musl'
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/csv-to-sql
      -
        name: Upload artifact for Windows
        if: matrix.target == 'x86_64-pc-windows-msvc'
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/csv-to-sql.exe
